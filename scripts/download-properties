#!/usr/bin/env node

var fs = require('fs');
var path = require('path');
var queue = require('queue-async');
var request = require('request');
var pump = require('pump');
var features = require('geojson-stream').parse;
var through = require('through2');
var stringify = require('JSONStream').stringify;

var inputDir = process.argv[2];
var outputDirectory = process.argv[3];

var files = require(path.resolve(inputDir, 'files.json'));

getProperties(function (err) { if (err) { throw err; } });

// Download every geojson, but save only the properties for each feature, i.e.
// strip geometries
function getProperties (callback) {
  var q = queue(1);

  files.forEach(function (f) {
    var outputFile = path.join(outputDirectory, f.name.replace(/geojson$/, 'properties.json'));
    if (fs.existsSync(outputFile)) {
      process.stdout.write(outputFile + ' already exists: skipping.\n');
    } else {
      q.defer(function (cb) {
        var featureCount = 0;
        process.stdout.write('processing: ' + f.name + '\n');
        pump(
          request(f.url),
          features(),
          through.obj(function (feat, _, next) {
            featureCount++;
            next(null, feat.properties);
          }),
          stringify(),
          fs.createWriteStream(outputFile),
          function (err) {
            if (!err) {
              process.stdout.write('finished: ' + f.name + '\n');
              if (featureCount === 0) {
                process.stdout.write('Warning: no features in ' + f.name + '\n');
                fs.unlinkSync(outputFile);
              }
            }
            cb(err);
          }
        );
      });
    }
  });

  q.awaitAll(callback);
}

